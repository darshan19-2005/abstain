#include <stdio.h>

// Function to swap two integers using pointers
void swap(int *a, int *b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}

int main() {
    int x = 10;
    int y = 20;
    int *ptr;  // pointer declaration

    // Assign address of x to ptr
    ptr = &x;

    printf("Address of x: %p\n", &x);
    printf("Value of x using ptr: %d\n", *ptr);

    printf("\nBefore swapping: x = %d, y = %d\n", x, y);
    swap(&x, &y);  // passing addresses to swap function
    printf("After swapping: x = %d, y = %d\n", x, y);

    // Pointer arithmetic
    int arr[3] = {100, 200, 300};
    int *p = arr;

    printf("\nArray elements using pointer arithmetic:\n");
    for (int i = 0; i < 3; i++) {
        printf("arr[%d] = %d\n", i, *(p + i));
    }

    return 0;
}
                                                #output of the programm
						Address of x: 0x7ffc3d04c8ac
Value of x using ptr: 10

Before swapping: x = 10, y = 20
After swapping: x = 20, y = 10

Array elements using pointer arithmetic:
arr[0] = 100
arr[1] = 200
arr[2] = 300
                        










			# FUNCTIONS
			#include <stdio.h>

// Function declarations
void greet();
int add(int a, int b);
int multiply(int a, int b);

int main() {
    int x = 5, y = 3;

    greet();  // Call function with no parameters

    int sum = add(x, y);  // Call function with parameters and return value
    printf("Sum of %d and %d is: %d\n", x, y, sum);

    int product = multiply(x, y);
    printf("Product of %d and %d is: %d\n", x, y, product);

    return 0;
}

// Function definitions
void greet() {
    printf("Hello! Welcome to C Programming with Functions.\n");
}

int add(int a, int b) {
    return a + b;
}

int multiply(int a, int b) {
    return a * b;
}







                                                                                         #OUTPUT




											 Hello! Welcome to C Programming with Functions.
Sum of 5 and 3 is: 8
Product of 5 and 3 is: 15

